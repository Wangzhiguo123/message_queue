// /*
//  * Licensed under the Apache License, Version 2.0 (the "License");
//  * you may not use this file except in compliance with the License.
//  * You may obtain a copy of the License at
//  *
//  *     http://www.apache.org/licenses/LICENSE-2.0
//  *
//  * Unless required by applicable law or agreed to in writing, software
//  * distributed under the License is distributed on an "AS IS" BASIS,
//  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  * See the License for the specific language governing permissions and
//  * limitations under the License.
//  */
// /*
//  * Licensed under the Apache License, Version 2.0 (the 'License');
//  * you may not use this file except in compliance with the License.
//  * You may obtain a copy of the License at
//  *
//  *     http://www.apache.org/licenses/LICENSE-2.0
//  *
//  * Unless required by applicable law or agreed to in writing, software
//  * distributed under the License is distributed on an 'AS IS' BASIS,
//  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  * See the License for the specific language governing permissions and
//  * limitations under the License.
//  */
// export default {
//   route: {
//     dashboard: 'Dashboard',
//     introduction: 'Introduction',
//     documentation: 'Documentation',
//     guide: 'Guide',
//     permission: 'Permission',
//     pagePermission: 'Page Permission',
//     directivePermission: 'Directive Permission',
//     icons: 'Icons',
//     components: 'Components',
//     componentIndex: 'Introduction',
//     tinymce: 'Tinymce',
//     markdown: 'Markdown',
//     jsonEditor: 'JSON Editor',
//     dndList: 'Dnd List',
//     splitPane: 'SplitPane',
//     avatarUpload: 'Avatar Upload',
//     dropzone: 'Dropzone',
//     sticky: 'Sticky',
//     countTo: 'CountTo',
//     componentMixin: 'Mixin',
//     backToTop: 'BackToTop',
//     dragDialog: 'Drag Dialog',
//     dragSelect: 'Drag Select',
//     dragKanban: 'Drag Kanban',
//     charts: 'Charts',
//     keyboardChart: 'Keyboard Chart',
//     lineChart: 'Line Chart',
//     mixChart: 'Mix Chart',
//     example: 'Example',
//     nested: 'Nested Routes',
//     menu1: 'Menu 1',
//     'menu1-1': 'Menu 1-1',
//     'menu1-2': 'Menu 1-2',
//     'menu1-2-1': 'Menu 1-2-1',
//     'menu1-2-2': 'Menu 1-2-2',
//     'menu1-3': 'Menu 1-3',
//     menu2: 'Menu 2',
//     Table: 'Table',
//     dynamicTable: 'Dynamic Table',
//     dragTable: 'Drag Table',
//     inlineEditTable: 'Inline Edit',
//     complexTable: 'Complex Table',
//     treeTable: 'Tree Table',
//     customTreeTable: 'Custom TreeTable',
//     tab: 'Tab',
//     form: 'Form',
//     createArticle: 'Create Article',
//     editArticle: 'Edit Article',
//     articleList: 'Article List',
//     errorPages: 'Error Pages',
//     page401: '401',
//     page404: '404',
//     errorLog: 'Error Log',
//     excel: 'Excel',
//     exportExcel: 'Export Excel',
//     selectExcel: 'Export Selected',
//     uploadExcel: 'Upload Excel',
//     zip: 'Zip',
//     exportZip: 'Export Zip',
//     theme: 'Theme',
//     clipboardDemo: 'Clipboard',
//     i18n: 'I18n',
//     externalLink: 'External Link'
//   },
//   navbar: {
//     logOut: 'Logout',
//     dashboard: 'Dashboard',
//     github: 'Github',
//     screenfull: 'Screenfull',
//     theme: 'Theme',
//     size: 'Global Size'
//   },
//   login: {
//     title: 'Login Form',
//     logIn: 'Log in',
//     username: 'Username',
//     password: 'Password',
//     any: 'any',
//     thirdparty: 'Or connect with',
//     thirdpartyTips: 'Can not be simulated on local, so please combine you own business simulation! ! !'
//   },
//   sidebar: {
//     clusters: 'Clusters',
//     clusterInfo: 'Cluster Details',
//     tenants: 'Tenants',
//     namespaces: 'Namespaces',
//     topics: 'Topics'
//   },
//   documentation: {
//     documentation: 'Documentation',
//     github: 'Github Repository'
//   },
//   permission: {
//     roles: 'Your roles',
//     switchRoles: 'Switch roles'
//   },
//   guide: {
//     description: 'The guide page is useful for some people who entered the project for the first time. You can briefly introduce the features of the project. Demo is based on ',
//     button: 'Show Guide'
//   },
//   components: {
//     documentation: 'Documentation',
//     tinymceTips: 'Rich text editor is a core part of management system, but at the same time is a place with lots of problems. In the process of selecting rich texts, I also walked a lot of detours. The common rich text editors in the market are basically used, and the finally chose Tinymce. See documentation for more detailed rich text editor comparisons and introductions.',
//     dropzoneTips: 'Because my business has special needs, and has to upload images to qiniu, so instead of a third party, I chose encapsulate it by myself. It is very simple, you can see the detail code in @/components/Dropzone.',
//     stickyTips: 'when the page is scrolled to the preset position will be sticky on the top.',
//     backToTopTips1: 'When the page is scrolled to the specified position, the Back to Top button appears in the lower right corner',
//     backToTopTips2: 'You can customize the style of the button, show / hide, height of appearance, height of the return. If you need a text prompt, you can use element-ui el-tooltip elements externally',
//     imageUploadTips: 'Since I was using only the vue@1 version, and it is not compatible with mockjs at the moment, I modified it myself, and if you are going to use it, it is better to use official version.'
//   },
//   table: {
//     dynamicTips1: 'Fixed header, sorted by header order',
//     dynamicTips2: 'Not fixed header, sorted by click order',
//     dragTips1: 'The default order',
//     dragTips2: 'The after dragging order',
//     title: 'Title',
//     importance: 'Imp',
//     type: 'Type',
//     remark: 'Remark',
//     search: 'Search',
//     add: 'Add',
//     export: 'Export',
//     reviewer: 'reviewer',
//     id: 'ID',
//     date: 'Date',
//     author: 'Author',
//     readings: 'Readings',
//     status: 'Status',
//     actions: 'Actions',
//     edit: 'Edit',
//     publish: 'Publish',
//     draft: 'Draft',
//     delete: 'Delete',
//     cancel: 'Cancel',
//     confirm: 'Confirm',
//     name: 'Name',
//     serviceUrl: 'Service Url',
//     brokerServiceUrl: 'BrokerServiceUrl',
//     tenant: 'Tenants',
//     namespace: 'Namespaces',
//     role: 'Role',
//     clusters: 'Clusters',
//     addRole: 'AddRole',
//     addCluster: 'AddCluster',
//     config: 'Config',
//     policies: 'Policies',
//     description: 'Description',
//     update: 'Update',
//     topic: 'Topic',
//     stats: 'Stats',
//     partition: 'Partition',
//     cluster: 'Cluster',
//     subscription: 'Subscription',
//     unsubscription: 'Unsubscription',
//     grant: 'Grant',
//     limit: 'Limit',
//     schemas: 'Schemas',
//     brokers: 'Brokers',
//     internalConfig: 'InternalConfig',
//     runtimeConfig: 'RuntimeConfig',
//     dynamicConfig: 'DynamicConfig',
//     healthCheck: 'HealthCheck',
//     functions: 'Functions',
//     start: 'Start',
//     stop: 'Stop',
//     restart: 'Restart',
//     trigger: 'Trigger',
//     configName: 'ConfigName',
//     configValue: 'ConfigValue',
//     sources: 'Sources',
//     builtin: 'Builtin',
//     sinks: 'Sink',
//     quotas: 'Quotas',
//     monitor: 'Monitor',
//     allowedClusters: 'Allowed Clusters',
//     adminRoles: 'Admin Roles'
//   },
//   errorLog: {
//     tips: 'Please click the bug icon in the upper right corner',
//     description: 'Now the management system are basically the form of the spa, it enhances the user experience, but it also increases the possibility of page problems, a small negligence may lead to the entire page deadlock. Fortunately Vue provides a way to catch handling exceptions, where you can handle errors or report exceptions.',
//     documentation: 'Document introduction'
//   },
//   excel: {
//     export: 'Export',
//     selectedExport: 'Export Selected Items',
//     placeholder: 'Please enter the file name(default excel-list)'
//   },
//   zip: {
//     export: 'Export',
//     placeholder: 'Please enter the file name(default file)'
//   },
//   theme: {
//     change: 'Change Theme',
//     documentation: 'Theme documentation',
//     tips: 'Tips: It is different from the theme-pick on the navbar is two different skinning methods, each with different application scenarios. Refer to the documentation for details.'
//   },
//   tagsView: {
//     refresh: 'Refresh',
//     close: 'Close',
//     closeOthers: 'Close Others',
//     closeAll: 'Close All'
//   },
//   breadcrumb: {
//     management: 'Management',
//     clusters: 'Clusters',
//     clusterInfo: 'Cluster Details',
//     brokers: 'Brokers',
//     brokerInfo: 'Broker Details',
//     isolationPolicies: 'Isolation Policies',
//     isolationPolicyInfo: 'Isolation Policy Details',
//     failureDomains: 'Failure Domains',
//     failureDomainInfo: 'Faillure Domain Details',
//     tenants: 'Tenants',
//     tenantInfo: 'Tenant Details',
//     namespaces: 'Namespaces',
//     namespaceInfo: 'Namespace Details',
//     topics: 'Topics',
//     topicInfo: 'Topic Details',
//     subscriptions: 'Subscriptions',
//     subscriptionInfo: 'Subscription Details'
//   },
//   tabs: {
//     config: 'CONFIG',
//     broker: 'BROKERS',
//     bookie: 'BOOKIES',
//     namespace: 'NAMESPACES',
//     overview: 'OVERVIEW',
//     topic: 'TOPICS',
//     policies: 'POLICIES',
//     configuration: 'CONFIGURATION',
//     failuredomains: 'FAILURE DOMAINS',
//     isolationpolicies: 'ISOLATION POLICIES',
//     storage: 'STORAGE'
//   },
//   role_actions: {
//     consume: 'consume',
//     produce: 'produce',
//     functions: 'functions'
//   },
//   subscription_auth_mode: {
//     none: 'None',
//     prefix: 'Prefix'
//   },
//   backlog_policy: {
//     consumer_backlog_eviction: 'consumer_backlog_eviction',
//     producer_exception: 'producer_exception',
//     producer_request_hold: 'producer_request_hold'
//   },
//   schema_bc: {
//     full: 'Full',
//     forward: 'Forward',
//     backward: 'Backward',
//     always: 'Always Compatible',
//     auto_update_disabled: 'AutoUpdate Disabled',
//     backward_transitive: 'Backward Transitive',
//     forward_transitive: 'Forward Transitive',
//     full_transitive: 'Full Transitive'
//   },
//   common: {
//     dangerZone: 'Danger Zone',
//     actions: 'Actions',
//     clusterLabel: 'Cluster',
//     namespacesLabel: 'Namespaces',
//     regex: 'Regex',
//     inMsg: 'In Rate',
//     outMsg: 'Out Rate',
//     inBytes: 'In Throughput',
//     outBytes: 'Out Throughput',
//     storageSize: 'Storage Size',
//     enabled: 'Enabled',
//     disabled: 'Disabled'
//   },
//   tenant: {
//     label: 'Tenant',
//     name: 'Tenant',
//     searchTenant: 'Search Tenants',
//     newTenant: 'New Tenant',
//     deleteTenant: 'Delete Tenant',
//     nameLabel: 'Tenant Name',
//     adminRolesLabel: 'Admin Roles',
//     allowedClustersLabel: 'Allowed Clusters',
//     selectTenantMessage: 'Please select tenant',
//     deleteTenantMessage: 'Are you sure you want to delete this tenant?',
//     tenantInfo: 'Tenant Info',
//     allowedClustersContent: 'List of clusters that this tenant is restricted on.',
//     adminRolesContent: 'List of authenticated roles allowed to administrate this tenant.',
//     permissions: 'Permissions',
//     newRole: 'New Role',
//     tenantIsRequired: 'Tenant Name is required',
//     clusterIsRequired: 'Please select allowed clusters for a tenant',
//     createTenantSuccessNotification: 'Successfully create a tenant',
//     deleteTenantSuccessNotification: 'Successfully delete a tenant',
//     roleAlreadyExists: 'Role already exists',
//     updateRolesSuccessNotification: 'Successfully update roles for this tenant',
//     updateClustersSuccessNotification: 'Successfully update allowed clusters for this tenant'
//   },
//   namespace: {
//     label: 'Namespace',
//     name: 'Namespace',
//     namespaceNumber: 'Namespaces',
//     newNamespace: 'New Namespace',
//     deleteNamespace: 'Delete Namespace',
//     inputNamespaceMessage: 'Please input namespace',
//     newTopic: 'New Topic',
//     searchTopics: 'Search Topics',
//     deleteNamespaceMessage: 'Are you sure you want to delete this namespace?',
//     namespaceNameIsRequired: 'Namespace name is required',
//     createNsSuccessNotification: 'Successfully create a namespace',
//     deleteNsSuccessNotification: 'Successfully delete the namespace',
//     searchNamespaces: 'Search namespaces',
//     policy: {
//       label: 'Policy',
//       name: 'Policy Name',
//       cluster: 'Clusters',
//       replicatedCluster: 'Replicated Clusters',
//       replicatedClustersContent: 'List of replication clusters for this namespace.' +
//         ' The messages of the topics in this namespace will be replicated between' +
//         ' the configured replication clusters in an asynchronous way.',
//       authorization: 'Authorization',
//       authorizationContent: 'Following section is used for granting and revoking ' +
//         'permissions to other client roles on this namespace.',
//       selectRole: 'Please select role',
//       deleteRole: 'Delete Role',
//       addRole: 'Add Role',
//       subscriptionAuthentication: 'Subscription Authentication',
//       subscriptionAuthenticationMode: 'Subscription Authentication Mode',
//       subscriptionAuthenticationModeContent: 'Configure the subscription authentication' +
//         ' mode to limit the naming convention for subscriptions when authentication' +
//         ' is enabled.',
//       subscriptionAuthenticationModeOptions: 'Available options: "None", "Prefix".',
//       subscriptionAuthenticationModeNone: 'None: every client role can use' +
//         ' any allowed subscription name to connect.',
//       subscriptionAuthenticaitonModePrefix: 'Prefix: the' +
//         ' clients are allowed to use subscription names prefixed with their role names' +
//         ' to subscribe.',
//       subscriptionAuthenticaitonModePrefixExample: 'For example, if a client is authenticated as `example`, it can' +
//         ' only use subscription name prefixed with `example` to subscribe. Other subscription' +
//         ' names are disallowed.',
//       storage: 'Storage',
//       replicationFactor: 'Replication Factor',
//       replicationFactorContent: 'Storage replication settings.',
//       ensembleSizeDescription: ': number of bookies to use when creating a ledger.',
//       writeQuorumSizeDescription: ': number of replicas to store for each message.',
//       ackQuorumSizeDescription: ': number of responses to wait before claiming a message is guaranteed to be stored.',
//       ensembleSize: 'Ensemble Size',
//       inputEnsemble: 'Please input ensemble',
//       writeQuorumSize: 'Write Quorum Size',
//       inputWriteQuorumSize: 'Please input Write Quorum Size',
//       readQuorumSize: 'Ack Quorum Size',
//       inputReadQuorumSize: 'Please input Ack Quorum Size',
//       markDeleteRate: 'Mark-Delete Rate',
//       markDeleteRateContent: 'The rate limiter on how many mark-delete calls per second are allowed. ' +
//         '0 to disable this rate limiter',
//       inputDeleteMaxRate: 'Please input Delete Max Rate',
//       encryptionRequire: 'Encryption Required',
//       encryptionRequireContent: 'Enforce message encryption for a namespace.',
//       deduplication: 'Deduplication',
//       deduplicationContent: 'Enable or disable deduplication for a namespace.',
//       backlog: 'Backlog',
//       backlogQuotasLimit: 'Backlog Quota Size',
//       backlogQuotasLimitContent: 'Max backlog quota is allowed for a namespace (in bytes)',
//       inputBacklogQuotasLimit: 'Please input Backlog Quotas Limit',
//       backlogRententionPolicy: 'Backlog Retention Policy',
//       backlogRententionPolicyContent: 'Retention policy to enforce when the backlog quota is reached.',
//       backlogRententionPolicyOptions: 'Valid options are:',
//       producerRequestHoldDesc: 'producer_request_hold: policy which holds producer\'s sent requests until the resource becomes available (or holding times out).',
//       producerExceptionDesc: 'producer_exception: policy which rejects producers\'s sent requests.',
//       consumerEvictionDesc: 'consumer_backlog_eviction: policy which evicts the oldest messages from the slowest consumer\'s backlog.',
//       inputBacklogRententionPolicyContent: 'Please select backlog rentention policy',
//       schema: 'Schema',
//       autoUpdateStrategy: 'AutoUpdate Strategy',
//       autoUpdateStrategyContent: 'Strategy applied for producer auto-updating new registered schemas.',
//       schemaCompatibilityCheckStrategyLink: 'Schema compatibility check strategy',
//       inputAutoUpdateStrategy: 'Please select backlog autoUpdate strategy',
//       schemaValidationEnforced: 'Schema Validation Enforced',
//       schemaValidationEnforcedContent: 'Enforce schema validation for producers without schema.' +
//         ' If disabled, producers without schema are disallowed to produce messages to topics with schema.',
//       cleanupPolicy: 'Cleanup Policy',
//       messageTTL: 'Message TTL (seconds)',
//       messageTTLContent: 'Set message TTL in seconds. If the messages are not consumed by any consumers' +
//         ' of a subscription, they are marked as `consumed` after the configured TTL period for that subscription.',
//       inputMessageTTL: 'Please input Backlog Quotas Limit',
//       retentionSize: 'Retention Size (megabytes)',
//       retentionSizeContent: 'The retention size. Only applied to the messages are acknowledged by all subscriptions.',
//       inputRententionSize: 'Please input retention size',
//       retentionTime: 'Retention Period (minutes)',
//       retentionTimeContent: 'The retention period. Only applied to the messages are acknowledged by all subscriptions ',
//       inputRetentionTime: 'Please input Retention Time',
//       compactionThreshold: 'Compaction Threshold (bytes)',
//       compactionThresholdContent: 'The compaction is automatically triggered when the storage size reaches the threshold.',
//       inputCompactionThreshold: 'Please input compaction threshold',
//       offloadThreshold: 'Offload Threshold (bytes)',
//       offloadThresholdContent: 'Messages are automatically offloaded to the tiered storage when the data size of unoffloaded messages reaches the threshold.',
//       inputOffloadThreshold: 'Please input Offload Threshold',
//       offloadDeletionLag: 'Offload Deletion Lag (milliseconds)',
//       offloadDeletionLagContent: 'Number of milliseconds to wait before deleting a ledger which has been offloaded from BookKeeper. A negative value denotes that deletion has been completelly disabled.',
//       inputOffloadDeleteLag: 'Please input offload delete lag',
//       throttling: 'Throttling',
//       maxProducersPerTopic: 'Max Producers Per Topic',
//       maxProducersPerTopicContent: 'Max number of producers allowed per topic.',
//       inputMaxProducersPerTopic: 'Please input max Producers',
//       maxConsumersPerTopic: 'Max Consumers Per Topic',
//       maxConsumersPerTopicContent: 'Max number of consumers allowed per topic.',
//       inputMaxConsumersForTopic: 'Please input max Consumers for topic',
//       maxConsumerPerSubscription: 'Max Consumers Per Subscription',
//       maxConsumerPerSubContent: 'Max number of consumers allowed per subscription.',
//       inputMaxConsumersForSub: 'Please input max consumer for sub',
//       dispatchRate: 'Dispatch Rate',
//       dispatchRatePerTopic: 'Dispatch Rate Per Topic',
//       dispatchRatePerTopicContent: 'Throttling dispatch rate on per-topic basis.',
//       dispatchRatePerTopicBytes: 'Throughput (bytes/second)',
//       inputDispatchRateBytes: 'Please input dispatch rate',
//       dispatchRatePerTopicMessage: 'Rate (messages/second)',
//       inputDispatchRatePerTopicMessage: 'Please input dispatch rate',
//       dispatchRatePerTopicPeriod: 'Time Period (seconds)',
//       inputDispatchPerTopicPerPeriod: 'Please input dispatch rate',
//       dispatchRateForSub: 'Dispatch Rate Per Subscription',
//       dispatchRatePerSubContent: 'Throttling dispatch rate on per-subscription basis.',
//       inputDispatchRatePerSubBytes: 'Please input dispatch rate',
//       dispatchRatePerSubBytes: 'Throughput (bytes/second)',
//       dispatchRatePerSubMessage: 'Rate (message/second)',
//       inputDispatchRatePerSubMessage: 'Please input dispatch rate',
//       dispatchRatePerSubPeriod: 'Time Period (seconds)',
//       inputDispatchRatePerSubPeriod: 'Please input dispatch rate',
//       subscribeRatePerConsumer: 'Subscribe Rate Per Consumer',
//       subscribeRatePerConsumerSub: 'Rate (subscribes/second)',
//       inputSubscribeRate: 'Please input subscribe rate',
//       subscribeRatePerConsumerContent: 'Limit how fast a consumer can attempt to subscribe to a topic.',
//       subscribeRatePerConsumerPeriod: 'Time Period (seconds)',
//       antiAffinity: 'Anti-Affinity',
//       antiAffinityGroup: 'Anti-Affinity Group',
//       antiAffinityGroupContent: 'Configure the anti-affinity group for this namespace.',
//       inputAntiAffinityGroup: 'Please input Anti Affinity Group',
//       roleAlreadyExists: 'This role already exists'
//     },
//     clearBacklog: 'Clear Backlog',
//     bundle: {
//       label: 'Bundle',
//       name: 'Bundle Name',
//       operation: 'Operation',
//       split: 'Split',
//       unload: 'Unload',
//       bundleInfoContent: 'Namespace bundles are the assignment and load-balancing units within Pulsar.',
//       bundleInfoLink: 'See - Pulsar load balance mechanism'
//     },
//     notification: {
//       updatePersistenceSuccess: 'Successfully update persistence settings for this namespace!',
//       updateBacklogQuotaSuccess: 'Successfully update backlog quota settings for this namespace!',
//       splitBundleSuccess: 'Successfully split a namespace bundle for this namespace!',
//       unloadAllBundlesSuccess: 'Successfully unload all the namespace bundles for this namespace!',
//       unloadBundleSuccess: 'Successfully unload a namespace bundle for this namespace!',
//       clearBacklogSuccess: 'Successfully clear backlog for this namespace!',
//       clearBundleBacklogSuccess: 'Successfully clear backlog of a namespace bundle for this namespace!',
//       updateReplicatedClustersSuccess: 'Successfully update replicated clusters for this namespace!',
//       updateSubscriptionAuthModeSuccess: 'Successfully update subscription authentication mode for this namespace!',
//       addRoleSuccess: 'Successfully add a role for this namespace!',
//       addRoleActionsSuccess: 'Successfully add a role action for this namespace!',
//       removeRoleSuccess: 'Successfully remove a role from this namespace!',
//       updateSchemaAutoUpdateStrategySuccess: 'Successfully change schema auto-update strategy for this namespace!',
//       enableSchemaValidationEnforcedSuccess: 'Successfully enable schema validation for this namespace!',
//       disableSchemaValidationEnforcedSuccess: 'Successfully disable schema validation for this namespace!',
//       updateMessageTTLSuccess: 'Successfully set message TTL for this namespace!',
//       updateRetentionSuccess: 'Successfully set message retention policy for this namespace!',
//       updateCompactionThresholdSuccess: 'Successfully set compaction threshold for this namespace!',
//       updateOffloadThresholdSuccess: 'Successfully set offload threshold for this namespace!',
//       updateOffloadDeletionLagSuccess: 'Successfully update offload deletion lag for this namespace!',
//       setMaxProducersSuccess: 'Successfully set max producers per topic for this namespace!',
//       setMaxConsumersSuccess: 'Successfully set max consumers per topic for this namespace!',
//       setMaxConsumersPerSubscriptionSuccess: 'Successfully set max consumers per subscription for this namespace!',
//       setDispatchRateSuccess: 'Successfully set max dispatch rate per topic for this namespace!',
//       setDispatchRatePerSubscriptionSuccess: 'Successfully set max dispatch rate per subscription for this namespace!',
//       setSubscribeRateSuccess: 'Successfully set max subscribe rate per topic for this namespace!',
//       setAntiAffinityGroupSuccess: 'Successfully set anti-affinity group for this namespace!',
//       enableEncryptionSuccess: 'Successfully enable message encryption for this namespace!',
//       disableEncryptionSuccess: 'Successfully disable message encryption for this namespace!',
//       enableDeduplicationSuccess: 'Successfully enable message de-duplication for this namespace!',
//       disableDeduplicationSuccess: 'Successfully disable message de-duplication for this namespace!'
//     }
//   },
//   topic: {
//     label: 'Topic',
//     name: 'Topic',
//     topicName: 'Topic Name',
//     topicNumber: 'Topics',
//     newTopic: 'New Topic',
//     deleteTopic: 'Delete Topic',
//     delete: 'Delete',
//     persistent: 'Persistent',
//     nonPersistent: 'Non-persistent',
//     partition: 'Partition',
//     partitions: 'Partitions',
//     partitionNumber: 'Partitions',
//     topicDomain: 'Domain',
//     addRole: 'Add Role',
//     producer: {
//       label: 'Producer',
//       name: 'Producer Name',
//       producers: 'Producers',
//       producerId: 'Producer Id',
//       producerName: 'Producer Name',
//       producerNumber: 'Producers',
//       avgMsgSize: 'Avg Msg Size',
//       address: 'Address',
//       since: 'Since'
//     },
//     subscription: {
//       label: 'Subscription',
//       name: 'Subscription Name',
//       subscriptions: 'Subscriptions',
//       type: 'Type',
//       subscriptionNumber: 'Subscriptions',
//       msgExpired: 'Msg Expired',
//       backlog: 'Backlog',
//       skip: 'SKIP',
//       skipMessage: 'Messages',
//       expire: 'EXPIRE',
//       expireMessage: 'messages older than timestamp (in seconds)',
//       expireTimePlaceholder: 'Expire Time for Messages',
//       expireTimeRequired: 'Expire Time is required',
//       clear: 'CLEAR',
//       clearMessage: 'Clear Message',
//       clearMessageConfirm: 'Do you confirm clear backlog?',
//       reset: 'RESET',
//       resetByTime: 'Reset by time',
//       resetByTimeMessage: 'Reset by time older than timestamp (in minutes)',
//       resetByTimeRequired: 'Reset Time is required',
//       resetById: 'Reset By Message Id',
//       messageId: 'Message ID',
//       mins: 'Mins',
//       storage: 'STORAGE',
//       storageSize: 'Storage Size',
//       entries: 'Entries',
//       segments: 'Segments',
//       peek: 'PEEK',
//       peekMessages: 'messages',
//       entryId: 'Entry Id',
//       message: 'Message',
//       messageGreaterThanZero: 'Messages should greater than 0',
//       peekMessageError: 'Peek messages error, please check',
//       messageSkipSuccess: 'Messages skip successfully',
//       expireMessageSuccess: 'Messages expire successfully',
//       clearMessageSuccess: 'Clear messages successfully',
//       minutesNotLessThanZero: 'Minutes cannot be less than 0',
//       resetCursorSuccess: 'Reset cursor successfully',
//       messageIdNotLessThanZero: 'Message Id cannot be less than 0',
//       newSub: 'New Subscription',
//       sub: 'Subscribe',
//       unsub: 'Unsubscribe',
//       subNotification: 'Please input correct sub name',
//       createSubSuccess: 'Create subscription successfully',
//       deleteSubSuccess: 'Delete subscription successfully',
//       deleteSubConfirm: 'Do you want to delete this subscription?'
//     },
//     segment: {
//       label: 'Segment',
//       name: 'Segment Name',
//       ledgerId: 'Ledger Id',
//       entries: 'Entries',
//       size: 'Size',
//       status: 'Status',
//       offload: 'Offload'
//     },
//     cursor: {
//       label: 'Cursor',
//       name: 'Cursor Name',
//       cursors: 'Cursors',
//       markDeletePosition: 'Mark Delete Position',
//       readPosition: 'Read Position',
//       waitingReadOp: 'Waiting Read Op',
//       pendingReadOp: 'Pending Read Op',
//       numberOfEntriesSinceFirstNotAckedMessage: 'Entries Since First Not AckedMessage'
//     },
//     policy: {
//       label: 'policy',
//       name: 'Policy Name',
//       policies: 'Policies',
//       authentication: 'Authorization',
//       authorizationContent: 'Grant and revoke permissions to client roles on topics.'
//     },
//     consumer: {
//       label: 'Consumer',
//       name: 'Consumer Name',
//       consumers: 'Consumers',
//       avgMsgSize: 'Avg Msg Size',
//       address: 'Address',
//       since: 'Since'
//     },
//     notification: {
//       createTopicSuccess: 'Successfully create a topic!',
//       deleteTopicSuccess: 'Successfully delete the topic!',
//       deletePartitionedTopicSuccess: 'Successfully delete the partitioned topic!',
//       unloadTopicSuccess: 'Successfully unload the topic!',
//       terminateTopicSuccess: 'Successfully terminate the topic!',
//       startCompactionSuccess: 'Successfully start compacting the topic!',
//       startOffloadSuccess: 'Successfully start offloading the topic',
//       expireMessageSuccess: 'Successfully expire messages the topic!',
//       resetMessageSuccess: 'Successfully reset messages the topic!',
//       clearMessageSuccess: 'Successfully clear messages the topic'
//     },
//     errorLog: {
//       noOffloadData: 'Nothing to offload!',
//       invalidSizeStr: 'Invalid size string! (e.g 200K 50M 1G)'
//     },
//     info: 'INFO',
//     column: 'column',
//     data: 'data',
//     terminate: 'Terminate',
//     compactionName: 'COMPACTION',
//     compaction: 'Compaction',
//     offloadName: 'OFFLOAD',
//     offload: 'Offload',
//     status: 'STATUS',
//     unload: 'Unload',
//     deleteTopicMessage: 'Are you sure you want to delete this topic?',
//     partitionedTopicName: 'Partitioned Topic Name',
//     selectRoleMessage: 'Please Select Role',
//     backlogOpeartion: 'Backlog Operation',
//     autoRefresh: 'Auto Refresh'
//   },
//   cluster: {
//     label: 'Cluster',
//     name: 'Cluster Name',
//     addCluster: 'Add Cluster',
//     updateCluster: 'Update Cluster',
//     deleteCluster: 'Delete Cluster',
//     searchClusters: 'Search Clusters',
//     selectCluster: 'Please select cluster',
//     serviceUrl: 'Service Url',
//     selectClusterMessage: 'Please select clusters',
//     webServiceUrlPrefix: 'Http Service Url',
//     webServiceUrlTlsPrefix: 'Https Service Url',
//     brokerServiceUrlPrefix: 'Broker Service Url',
//     brokerServiceUrlTlsPrefix: 'Broker Service Url (TLS)',
//     deleteClusterMessage: 'Are you sure you want to delete this cluster?',
//     replicatedCluster: 'Replicated Clusters',
//     addClusterSuccessNotification: 'Successfully add a cluster',
//     deleteClusterSuccessNotification: 'Successfully delete a cluster',
//     clusterNameIsRequired: 'Cluster name is required',
//     serviceUrlIsRequired: 'Service URL is required',
//     bookieUrlIsRequired: 'Bookie URL is required',
//     deleteClusterDialogCaption: 'Delete Cluster',
//     updateClusterSuccessNotification: 'Successfully update a cluster'
//   },
//   broker: {
//     label: 'Broker',
//     name: 'Broker',
//     brokerNumber: 'Brokers',
//     ownedNamespaceNumber: 'Owned Namespaces',
//     throughput: 'Throughput',
//     msgRate: 'Msg Rate (msgs/s)',
//     placeholderSelectBroker: 'Please select brokers',
//     brokerContent: 'The list of brokers belong to this failure domain.'
//   },
//   bookie: {
//     label: 'Bookie',
//     name: 'Name',
//     state: 'State',
//     storage: 'Storage'
//   },
//   // failure domain
//   fd: {
//     label: 'Failure Domain',
//     failureDomainNumber: 'Failure Domains',
//     createFdTitle: 'Add a New Failure Domain',
//     name: 'Domain Name',
//     brokerList: 'Broker List',
//     selectBrokers: 'Please select brokers',
//     searchFds: 'Search Failure Domains',
//     newFd: 'New FailureDomain',
//     updateFd: 'Update Failure Domain',
//     deleteFd: 'Delete Failure Domain',
//     deleteFdMessage: 'Are you sure you want to delete this failure domain?',
//     domainNameIsRequired: 'Domain Name is required',
//     deleteDomainDialogCaption: 'Delete Failure Domain',
//     createFdSuccessNotification: 'Successfully create a failure domain',
//     deleteFdSuccessNotification: 'Successfully delete a failure domain',
//     updateFdSuccessNotification: 'Successfully update a failure domain'
//   },
//   // isolation policies
//   ip: {
//     label: 'Policy',
//     heading: 'Namespace Isolation Policy',
//     name: 'Policy Name',
//     searchIps: 'Search Isolation Policies',
//     selectIp: 'Select Isolation Policy',
//     newIp: 'New Isolation Policy',
//     nameLabel: 'Isolation Policy',
//     numPBLabel: 'Primary Brokers',
//     numSBLabel: 'Secondary Brokers',
//     newIpName: 'Please input policy name',
//     selectNsLabel: 'Select Namespaces',
//     selectPbLabel: 'Select Brokers',
//     selectSbLabel: 'Select Brokers',
//     selectAfpPh: 'Please select auto failover policy',
//     pbHeading: 'Primary Brokers',
//     sbHeading: 'Secondary Brokers',
//     afpHeading: 'Auto Failover Policy',
//     ptHeading: 'Policy Type',
//     brokerUsageThresholdLabel: 'Broker Usage Threshold',
//     brokerUsageThresholdPh: 'Please input broker usage threshold',
//     minimalAvailableBrokerLabel: 'Minimal Available Brokers',
//     minimalAvailableBrokerPh: 'Please input minimalAvailableBroker',
//     deletePolicyMessage: 'Are you sure you want to delete this policy?',
//     deletePolicyDialogCaption: 'Delete Isolation Policy',
//     deletePolicySuccessNotification: 'Successfully delete an isolation policy',
//     policyNameCannotBeEmpty: 'Policy name cannot be empty',
//     regexCannotBeEmpty: 'Namespace regex cannot be empty',
//     nsRegexAlreadyExists: 'Namespace regex already exists',
//     primaryBrokerRegexCannotBeEmpty: 'Primary broker regex cannot be empty',
//     primaryBrokerRegexAlreadyExists: 'Primary broker regex already exists',
//     secondaryBrokerRegexCannotBeEmpty: 'Secondary broker regex cannot be empty',
//     secondaryBrokerRegexAlreadyExists: 'Secondary broker regex already exists',
//     numLimitShouldGreaterThan0: 'Minimal available brokers should be greater than 0',
//     usageThresholdShouldGreaterThan0: 'Broker usage threshold should be greater than 0',
//     updatePolicySuccessNotification: 'Successfully update an ioslation policy',
//     namespaceDesc: 'Regex expressions for the namespaces to apply this isolation policy.',
//     primaryBrokerDesc: 'Regex expressions for the primary brokers of this isolation policy.',
//     secondaryBrokerDesc: 'Regex expressions for the secondary brokers of this isolation policy.',
//     policyTypeDesc: 'The policy to auto-failover the configured namespaces between primary brokers and secondary brokers.',
//     brokerUsageThresholdDesc: 'The usage threshold that a broker is marked as unavailable for the auto-failover policy.',
//     minimalAvailableBrokerDesc: 'The minimum number of available brokers to trigger auto failover.'
//   },
//   // environment
//   env: {
//     buttonNewEnv: 'New Environment',
//     colHeadingEnv: 'Environment Name',
//     colHeadingServiceUrl: 'Service URL',
//     colHeadingBookieUrl: 'Bookie URL',
//     newEnvDialogCaption: 'New Environment',
//     newEnvNamePlaceHolder: 'Please input environment name',
//     newEnvNameLabel: 'Environment Name',
//     newEnvServiceUrlPlaceHolder: 'Please input environment service url',
//     newEnvServiceUrlLabel: 'Service URL',
//     updateEnvDialogCaption: 'Update Environment',
//     updateEnvNameLabel: 'Environment Name',
//     updateEnvServiceUrlPlaceHolder: 'Please input environment service url',
//     updateEnvBookieUrlPlaceHolder: 'Please input environment bookie url',
//     newEnvBookieUrlPlaceHolder: 'Please input environment bookie url',
//     updateEnvServiceUrlLabel: 'Service URL',
//     updateEnvBookieUrlLabel: 'Bookie URL',
//     newEnvBookieUrlLabel: 'Bookie URL',
//     deleteEnvDialogCaption: 'Delete Environment',
//     deleteEnvDialogText: 'Are you sure you want to delete this environment?',
//     envNameIsRequired: 'Environment Name is required',
//     serviceUrlIsRequired: 'Service URL is required',
//     addEnvSuccessNotification: 'Successfully add an environment',
//     deleteEnvSuccessNotification: 'Successfully delete an environment',
//     updateEnvSuccessNotification: 'Successfully update an environment',
//     manageEnvs: 'Manage Environments'
//   },
//   token: {
//     buttonNewToken: 'New Token',
//     colHeadingRole: 'Role',
//     colHeadingToken: 'Token',
//     colHeadingDesc: 'Description',
//     newTokenRolePlaceholder: 'Please input role name',
//     newTokenDialogCaption: 'New Token',
//     newTokenDescPlaceholder: 'Please input description for role',
//     newTokenRequiredMessage: 'Role is required',
//     addTokenSuccessNotification: 'Successfully add a token for role',
//     deleteTokenSuccessNotification: 'Successfully delete a token for role',
//     updateTokenSucccessNotification: 'Successfully update a token for role'
//   },
//   user: {
//     buttonNewUser: 'New a user',
//     colUserName: 'User Name',
//     colUserDesc: 'User Description',
//     colUserEmail: 'User Email',
//     colUserPhone: 'User Phone Number',
//     colUserLocation: 'User Location',
//     colUserCompany: 'User Company',
//     colUserPassword: 'User Password',
//     colUserPasswordRepeat: 'Repeat User Password',
//     userNamePlaceHolder: 'Please input user name',
//     userDescPlaceHolder: 'Please input user description',
//     userEmailPlaceHolder: 'Please input user email',
//     userPhonePlaceHolder: 'Please input user phone number',
//     userLocationPlaceHolder: 'Please input user location',
//     userCompanyPlaceHolder: 'Please input user company',
//     userPasswordPlaceHolder: 'Please input user password',
//     newUser: 'New a user',
//     deleteUser: 'Delete a user',
//     updateUser: 'Update a user',
//     userNameIsRequired: 'The name can not is empty',
//     userEmailIsRequired: 'The email can not is empty',
//     userPasswordIsRequired: 'The password can not is empty',
//     passwordNotification: 'The passwords do not match',
//     creatUserNotification: 'Create a user success',
//     deleteUserNotification: 'Delete a user success',
//     updateUserNotification: 'Update a user success'
//   },
//   role: {
//     roleAlreadyExists: 'Role already exists',
//     buttonNewRole: 'New a Role',
//     colRoleName: 'Role Name',
//     colRoleDesc: 'Role Description',
//     colResourceType: 'Resource Type',
//     colResourceName: 'Resource Name',
//     colResourceVerbs: 'Resource Verbs',
//     colRoleSource: 'Role Source',
//     colResource: 'Resource',
//     roleNamePlaceHolder: 'Please input role name',
//     roleDescPlaceHolder: 'Please input role description',
//     resourceNamePlaceHolder: 'Please select resource name',
//     resourceTypePlaceHolder: 'Please select resource type',
//     resourcePlaceHolder: 'Please select resource',
//     resourceVerbsPlaceHolder: 'Please select role verbs',
//     resourceDescPlaceHolder: 'Please input role description',
//     newRole: 'New a Role',
//     deleteRole: 'Delete a Role',
//     updateRole: 'Update a Role',
//     roleNameIsRequired: 'The name can not is empty',
//     creatRoleNotification: 'Create a role success',
//     deleteRoleNotification: 'Delete a role success',
//     updateRoleNotification: 'Update a role success'
//   }
// }
/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
/*
 * Licensed under the Apache License, Version 2.0 (the 'License');
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an 'AS IS' BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
export default {
  route: {
    dashboard: '仪表板',
    introduction: '介绍',
    documentation: '文档',
    guide: '指南',
    permission: '权限',
    pagePermission: '页面权限',
    directivePermission: '指令权限',
    icons: '图标',
    components: '组件',
    componentIndex: '介绍',
    tinymce: 'Tinymce',
    markdown: 'Markdown',
    jsonEditor: 'JSON 编辑',
    dndList: 'Dnd 清单',
    splitPane: '分隔块',
    avatarUpload: '头像上传',
    dropzone: '裁剪区域',
    sticky: 'Sticky',
    countTo: 'CountTo',
    componentMixin: 'Mixin',
    backToTop: '返回首页',
    dragDialog: '拖动对话框',
    dragSelect: '拖动选择',
    dragKanban: '拖动看板',
    charts: '图表',
    keyboardChart: '键盘图',
    lineChart: '线性图',
    mixChart: '混合图',
    example: '范例',
    nested: 'Nested Routes',
    menu1: '菜单 1',
    'menu1-1': '菜单 1-1',
    'menu1-2': '菜单 1-2',
    'menu1-2-1': '菜单 1-2-1',
    'menu1-2-2': '菜单 1-2-2',
    'menu1-3': '菜单 1-3',
    menu2: '菜单 2',
    Table: '表',
    dynamicTable: '动态表',
    dragTable: '拖拽表',
    inlineEditTable: '直接编辑',
    complexTable: '复杂表',
    treeTable: '树形表',
    customTreeTable: '自定义树形表',
    tab: 'Tab',
    form: 'Form',
    createArticle: '创建文章',
    editArticle: '编辑文章',
    articleList: '文章清单',
    errorPages: '错误页',
    page401: '401',
    page404: '404',
    errorLog: '错误日志',
    excel: 'Excel',
    exportExcel: '导出 Excel',
    selectExcel: '导出 Selected',
    uploadExcel: '上传 Excel',
    zip: 'Zip',
    exportZip: '导出 Zip',
    theme: '主题',
    clipboardDemo: '剪贴板',
    i18n: 'I18n',
    externalLink: '外部链接'
  },
  navbar: {
    logOut: '退出',
    dashboard: '仪表盘',
    github: 'Github',
    screenfull: '全屏',
    theme: '主题',
    size: '全局大小'
  },
  login: {
    title: '登录表单',
    logIn: '登录',
    username: '账号',
    password: '密码',
    any: '任何',
    thirdparty: '第三方',
    thirdpartyTips: '不能在本地模拟，所以请结合您自己的业务模拟! ! !'
  },
  sidebar: {
    clusters: '节点',
    clusterInfo: '节点详情',
    tenants: '租户',
    namespaces: '命名空间',
    topics: 'Topics'
  },
  documentation: {
    documentation: '文档',
    github: 'Github存储库'
  },
  permission: {
    roles: '你的角色',
    switchRoles: '切换角色'
  },
  guide: {
    description: '指南页对一些第一次进入项目的人很有用。你可以简单地介绍一下这个项目的特点。用于演示',
    button: '演示指南'
  },
  components: {
    documentation: '文档',
    tinymceTips: '富文本编辑器是管理系统的核心部分，但同时也是一个存在诸多问题的地方。在选富文本的过程中，我也走了很多弯路。市场上常见的富文本编辑器基本上都是使用的，最终选择了Tinymce。有关更详细的富文本编辑器比较和介绍，请参阅文档.',
    dropzoneTips: '因为我的业务有特殊的需求，需要上传图片到qiniu，所以我没有选择第三方，而是选择了自己封装。它非常简单，您可以在@/components/Dropzone中看到详细代码.',
    stickyTips: '当页面滚动到预设位置时，页面顶部会有粘性.',
    backToTopTips1: '当页面滚动到指定位置时，“返回页首”按钮将出现在右下角',
    backToTopTips2: '您可以自定义按钮的样式、显示/隐藏、外观高度、返回高度。如果需要文本提示，可以在外部使用元素ui或工具提示元素',
    imageUploadTips: '因为我只使用vue@1 版本，而且目前与mockjs不兼容，我自己修改的，如果你要用的话，最好用官方版本.'
  },
  table: {
    dynamicTips1: '固定标题，按标题顺序排序',
    dynamicTips2: '不固定标题，按单击顺序排序',
    dragTips1: '默认顺序',
    dragTips2: '后拖顺序',
    title: '标题',
    importance: 'Imp',
    type: '类型',
    remark: '标签',
    search: '查找',
    add: '增加',
    export: '导出',
    reviewer: '评审员',
    id: '编号',
    date: '日期',
    author: '作者',
    readings: '解读',
    status: '状态',
    actions: '动作',
    edit: '编辑',
    publish: '发布',
    draft: '草稿',
    delete: '删除',
    cancel: '取消',
    confirm: '确认',
    name: '名称',
    serviceUrl: '服务地址',
    brokerServiceUrl: 'Broker服务地址',
    tenant: '租户',
    namespace: '命名空间',
    role: '角色',
    clusters: '节点',
    addRole: '增加角色',
    addCluster: '增加节点',
    config: '配置',
    policies: '策略',
    description: '描述',
    update: '更新',
    topic: 'Topic',
    stats: '状态',
    partition: '分区',
    cluster: '节点',
    subscription: '订阅',
    unsubscription: '取消订阅',
    grant: '授权',
    limit: '限制',
    schemas: 'Schemas',
    brokers: 'Brokers',
    internalConfig: '内部配置',
    runtimeConfig: '运行时配置',
    dynamicConfig: '动态配置',
    healthCheck: '健康检查',
    functions: 'Functions',
    start: '开始',
    stop: '停止',
    restart: '重启',
    trigger: '触发器',
    configName: '配置名称',
    configValue: '配置值',
    sources: '来源',
    builtin: '内建',
    sinks: 'Sink',
    quotas: 'Quotas',
    monitor: '监视器',
    allowedClusters: '授权节点',
    adminRoles: '管理角色'
  },
  errorLog: {
    tips: 'Please click the bug icon in the upper right corner',
    description: 'Now the management system are basically the form of the spa, it enhances the user experience, but it also increases the possibility of page problems, a small negligence may lead to the entire page deadlock. Fortunately Vue provides a way to catch handling exceptions, where you can handle errors or report exceptions.',
    documentation: 'Document introduction'
  },
  excel: {
    export: '导出',
    selectedExport: '导出选择项',
    placeholder: '请输入文件名（默认excel列表）'
  },
  zip: {
    export: '导出',
    placeholder: '请输入文件名（默认文件列表）'
  },
  theme: {
    change: '更改主题',
    documentation: '主题文档',
    tips: '提示：它与navbar上的主题选取不同的是两种不同的蒙皮方法，每种方法具有不同的应用场景。有关详细信息，请参阅文档。'
  },
  tagsView: {
    refresh: '刷新',
    close: '关闭',
    closeOthers: '关闭其他所有',
    closeAll: '关闭所有'
  },
  breadcrumb: {
    management: '应用程序管理',
    clusters: '节点',
    clusterInfo: '节点详情',
    brokers: 'Brokers',
    brokerInfo: 'Broker 详情',
    isolationPolicies: '隔离策略',
    isolationPolicyInfo: '隔离策略详情',
    failureDomains: '故障域',
    failureDomainInfo: '故障域详情',
    tenants: '租户',
    tenantInfo: '租户详情',
    namespaces: '命名空间',
    namespaceInfo: '命名空间详情',
    topics: 'Topics',
    topicInfo: 'Topic 详情',
    subscriptions: '订阅',
    subscriptionInfo: '订阅详情'
  },
  tabs: {
    config: '配置',
    broker: 'BROKERS',
    bookie: 'BOOKIES',
    namespace: '命名空间',
    overview: '概览',
    topic: 'TOPICS',
    policies: '策略',
    configuration: '配置',
    failuredomains: '故障域',
    isolationpolicies: '隔离策略',
    storage: '存储'
  },
  role_actions: {
    consume: '消费者',
    produce: '生产者',
    functions: '函数'
  },
  subscription_auth_mode: {
    none: '无',
    prefix: '前缀'
  },
  backlog_policy: {
    consumer_backlog_eviction: 'consumer_backlog_eviction',
    producer_exception: 'producer_exception',
    producer_request_hold: 'producer_request_hold'
  },
  schema_bc: {
    full: '完全',
    forward: '向前',
    backward: '向后',
    always: '始终兼容',
    auto_update_disabled: '自动更新已禁用',
    backward_transitive: '向后兼容',
    forward_transitive: '向前兼容',
    full_transitive: '全兼容'
  },
  common: {
    dangerZone: 'Danger Zone',
    actions: 'Actions',
    clusterLabel: 'Cluster',
    namespacesLabel: '命名空间',
    regex: '正则表达式',
    inMsg: '输入率',
    outMsg: '输出率',
    inBytes: '吞吐量',
    outBytes: '输出吞吐量',
    storageSize: '存储大小',
    enabled: '使可用',
    disabled: '使不可用'
  },
  tenant: {
    label: '租户',
    name: '租户',
    searchTenant: '搜索租户',
    newTenant: '新建租户',
    deleteTenant: '删除租户',
    nameLabel: '租户名称',
    adminRolesLabel: '管理员角色',
    allowedClustersLabel: '允许的群集',
    selectTenantMessage: '请选择租户',
    deleteTenantMessage: '确实要删除此租户吗?',
    tenantInfo: '租户信息',
    allowedClustersContent: '此租户受限制的群集列表.',
    adminRolesContent: '允许管理此租户的已验证角色的列表.',
    permissions: '权限',
    newRole: '新建角色',
    tenantIsRequired: '租户名称是必需的',
    clusterIsRequired: '请为租户选择允许的群集',
    createTenantSuccessNotification: '已成功创建租户',
    deleteTenantSuccessNotification: '成功删除租户',
    roleAlreadyExists: '角色已存在',
    updateRolesSuccessNotification: '已成功更新此租户的角色',
    updateClustersSuccessNotification: '已成功更新此租户允许的群集'
  },
  namespace: {
    label: '命名空间',
    name: '命名空间',
    namespaceNumber: '命名空间',
    newNamespace: '新建命名空间',
    deleteNamespace: '删除命名空间',
    inputNamespaceMessage: '请输入命名称',
    newTopic: '新建Topic',
    searchTopics: '查找Topics',
    deleteNamespaceMessage: '确实要删除此命名空间吗?',
    namespaceNameIsRequired: '命名空间名称是必需的',
    createNsSuccessNotification: '成功创建命名空间',
    deleteNsSuccessNotification: '成功删除命名空间',
    searchNamespaces: '查找命名空间',
    policy: {
      label: '策略',
      name: '策略名称',
      cluster: '节点',
      replicatedCluster: '复制节点',
      replicatedClustersContent: '此命名空间的复制群集列表.' +
        ' 此命名空间中主题的消息将在' +
        ' 以异步方式配置的复制群集.',
      authorization: '授权',
      authorizationContent: '以下部分用于授予和撤销 ' +
        '此命名空间上其他客户端角色的权限.',
      selectRole: '请选择角色',
      deleteRole: '删除角色',
      addRole: '增加角色',
      subscriptionAuthentication: '订阅身份验证',
      subscriptionAuthenticationMode: '订阅身份验证模式',
      subscriptionAuthenticationModeContent: '配置订阅身份验证' +
        ' 模式来限制身份验证时订阅的命名约定' +
        ' 已启用.',
      subscriptionAuthenticationModeOptions: '可用设置: "无", "前缀".',
      subscriptionAuthenticationModeNone: '无: 每个客户端角色都可以使用任何允许连接的订阅名称.',
      subscriptionAuthenticaitonModePrefix: '前缀: 允许客户端使用以其角色名称为前缀的订阅名称进行订阅.',
      subscriptionAuthenticaitonModePrefixExample: '例如, 如果客户端的身份验证为“example”，则它只能使用前缀为example的订阅名称进行订阅。不允许使用其他订阅名称.',
      storage: '存储',
      replicationFactor: '复制因子',
      replicationFactorContent: '存储复制设置.',
      ensembleSizeDescription: ': 创建分类帐时要使用的赌注数目.',
      writeQuorumSizeDescription: ': 为每条消息存储的副本数.',
      ackQuorumSizeDescription: ': 在声明消息被保证存储之前要等待的响应数.',
      ensembleSize: '整体大小',
      inputEnsemble: '请输入大小',
      writeQuorumSize: '写入一致性大小',
      inputWriteQuorumSize: '请输入写一致性大小值',
      readQuorumSize: '确认一致性大小',
      inputReadQuorumSize: '请输入确认一致性大小值',
      markDeleteRate: '标记删除率',
      markDeleteRateContent: '每秒允许的mark delete调用数的速率限制. ' +
        '0 要禁用此速率限制器',
      inputDeleteMaxRate: '请输入删除最大速率',
      encryptionRequire: '需要加密',
      encryptionRequireContent: '强制命名空间的消息加密.',
      deduplication: '重复数据消除',
      deduplicationContent: '启用或禁用命名空间的重复数据消除.',
      backlog: '积压',
      backlogQuotasLimit: '积压指标',
      backlogQuotasLimitContent: '命名空间允许的最大积压工作配额（字节）',
      inputBacklogQuotasLimit: '请输入积压配额限制',
      backlogRententionPolicy: '积压保留策略',
      backlogRententionPolicyContent: '达到积压工作配额时要强制执行的保留策略.',
      backlogRententionPolicyOptions: '有效选项为:',
      producerRequestHoldDesc: 'producer_request_hold: 在资源可用（或等待超时）之前保留生产者发送的请求的策略.',
      producerExceptionDesc: 'producer_exception: 拒绝生产者发送的请求的策略.',
      consumerEvictionDesc: 'consumer_backlog_eviction: 从最慢的使用者的待办事项中逐出最旧消息的策略.',
      inputBacklogRententionPolicyContent: '请选择有效积压策略',
      schema: 'Schema',
      autoUpdateStrategy: '自动更新策略',
      autoUpdateStrategyContent: '生产者自动更新新注册模式的策略.',
      schemaCompatibilityCheckStrategyLink: '模式兼容性检查策略',
      inputAutoUpdateStrategy: '请选择自动更新策略',
      schemaValidationEnforced: '强制Schema验证',
      schemaValidationEnforcedContent: '对没有架构的生产者强制Schema验证.' +
        ' 如果禁用，则不允许没有Schema的生产者向具有Schema的主题生成消息.',
      cleanupPolicy: '清理策略',
      messageTTL: '消息TTL（秒）',
      messageTTLContent: '以秒为单位设置消息TTL。如果订阅的任何使用者未使用这些消息，则在为该订阅配置的TTL时段之后，这些消息将被标记为“已使用”.',
      inputMessageTTL: '请输入积压配额限制',
      retentionSize: '保留大小（字节）',
      retentionSizeContent: '保留大小。只有应用于消息的消息才会被所有订阅确认.',
      inputRententionSize: '请输入保留大小',
      retentionTime: '保留期（分钟）',
      retentionTimeContent: '保留期。只有应用于消息的消息才会被所有订阅确认 ',
      inputRetentionTime: '请输入保留时间',
      compactionThreshold: '压缩阈值（字节）',
      compactionThresholdContent: '当存储大小达到阈值时，将自动触发压缩.',
      inputCompactionThreshold: '请输入压缩阈值',
      offloadThreshold: '卸载阈值（字节）',
      offloadThresholdContent: '当未卸载邮件的数据大小达到阈值时，邮件将自动卸载到分层存储.',
      inputOffloadThreshold: '请输入卸载阈值',
      offloadDeletionLag: '卸载删除延迟（毫秒）',
      offloadDeletionLagContent: '删除已从簿记员处卸载的分类帐之前等待的毫秒数。负值表示已完全禁用删除.',
      inputOffloadDeleteLag: '请输入卸载删除延迟',
      throttling: '限流',
      maxProducersPerTopic: '每个主题的最大生产者数',
      maxProducersPerTopicContent: '每个主题允许的最大生产者数量.',
      inputMaxProducersPerTopic: '请输入最大生产商',
      maxConsumersPerTopic: '每个主题的最大使用者数',
      maxConsumersPerTopicContent: '每个主题允许的最大使用者数.',
      inputMaxConsumersForTopic: '请输入主题的最大消费者数',
      maxConsumerPerSubscription: '每个订阅的最大用户数',
      maxConsumerPerSubContent: '每个订阅允许的最大使用者数.',
      inputMaxConsumersForSub: '请输入sub的最大消费者',
      dispatchRate: '发送率',
      dispatchRatePerTopic: '每个主题的发送率',
      dispatchRatePerTopicContent: '按主题限制调度速率.',
      dispatchRatePerTopicBytes: '吞吐量（字节/秒）',
      inputDispatchRateBytes: '请输入派送率',
      dispatchRatePerTopicMessage: '速率（消息/秒）',
      inputDispatchRatePerTopicMessage: '请输入派送率',
      dispatchRatePerTopicPeriod: '时间段（秒）',
      inputDispatchPerTopicPerPeriod: '请输入派送率',
      dispatchRateForSub: '每个订阅的发送率',
      dispatchRatePerSubContent: '按订阅限制调度速率.',
      inputDispatchRatePerSubBytes: '请输入派送率',
      dispatchRatePerSubBytes: '吞吐量（字节/秒）',
      dispatchRatePerSubMessage: '速率（消息/秒）',
      inputDispatchRatePerSubMessage: '请输入派送率',
      dispatchRatePerSubPeriod: '时间段（秒）',
      inputDispatchRatePerSubPeriod: '请输入派送率',
      subscribeRatePerConsumer: '每个消费者的订阅率',
      subscribeRatePerConsumerSub: '速率（订阅/秒）',
      inputSubscribeRate: '请输入订阅率',
      subscribeRatePerConsumerContent: '限制消费者尝试订阅主题的速度.',
      subscribeRatePerConsumerPeriod: '时间段（秒）',
      antiAffinity: '反相似性',
      antiAffinityGroup: '反相似性组',
      antiAffinityGroupContent: '为此命名空间配置反相似性组.',
      inputAntiAffinityGroup: '请输入相似性组',
      roleAlreadyExists: '此角色已存在'
    },
    clearBacklog: '清除积压工作',
    bundle: {
      label: '捆绑',
      name: '捆绑名称',
      operation: '操作',
      split: '分裂',
      unload: '卸载',
      bundleInfoContent: '命名空间包是Pulsar中的分配和负载平衡单元.',
      bundleInfoLink: '见 - Pulsar 负载平衡机制'
    },
    notification: {
      updatePersistenceSuccess: '已成功更新此命名空间的持久性设置!',
      updateBacklogQuotaSuccess: '已成功更新此命名空间的积压工作配额设置!',
      splitBundleSuccess: '已成功拆分此命名空间的命名空间包!',
      unloadAllBundlesSuccess: '已成功卸载此命名空间的所有命名空间捆绑包!',
      unloadBundleSuccess: '已成功卸载此命名空间的命名空间包!',
      clearBacklogSuccess: '已成功清除此命名空间的积压工作!',
      clearBundleBacklogSuccess: '已成功清除此命名空间的命名空间包的积压工作!',
      updateReplicatedClustersSuccess: '已成功更新此命名空间的复制群集!',
      updateSubscriptionAuthModeSuccess: '已成功更新此命名空间的订阅身份验证模式!',
      addRoleSuccess: '已成功为此命名空间添加角色!',
      addRoleActionsSuccess: '已成功为此命名空间添加角色操作!',
      removeRoleSuccess: '已成功从此命名空间中删除角色!',
      updateSchemaAutoUpdateStrategySuccess: '已成功更改此命名空间的架构自动更新策略!',
      enableSchemaValidationEnforcedSuccess: '已成功为此命名空间启用架构验证!',
      disableSchemaValidationEnforcedSuccess: '已成功禁用此命名空间的架构验证!',
      updateMessageTTLSuccess: '已成功为此命名空间设置消息TTL!',
      updateRetentionSuccess: '已成功为此命名空间设置邮件保留策略!',
      updateCompactionThresholdSuccess: '已成功为此命名空间设置压缩阈值!',
      updateOffloadThresholdSuccess: '已成功为此命名空间设置卸载阈值!',
      updateOffloadDeletionLagSuccess: '已成功更新此命名空间的卸载删除延迟!',
      setMaxProducersSuccess: '已成功为此命名空间设置每个主题的最大生产者数!',
      setMaxConsumersSuccess: '已成功为此命名空间设置每个主题的最大使用者数!',
      setMaxConsumersPerSubscriptionSuccess: '已成功为此命名空间设置每个订阅的最大使用者数!',
      setDispatchRateSuccess: '已成功为此命名空间设置每个主题的最大分派速率!',
      setDispatchRatePerSubscriptionSuccess: '已成功为此命名空间设置每个订阅的最大分派速率!',
      setSubscribeRateSuccess: '已成功为此命名空间设置每个主题的最大订阅速率!',
      setAntiAffinityGroupSuccess: '已成功为此命名空间设置反相似性组!',
      enableEncryptionSuccess: '已成功为此命名空间启用消息加密!',
      disableEncryptionSuccess: '已成功禁用此命名空间的消息加密!',
      enableDeduplicationSuccess: '已成功为此命名空间启用重复消息消除!',
      disableDeduplicationSuccess: '已成功禁用此命名空间的重复消息消除!'
    }
  },
  topic: {
    label: 'Topic',
    name: 'Topic',
    topicName: 'Topic名称',
    topicNumber: 'Topics',
    newTopic: '新建Topic',
    deleteTopic: '删除Topic',
    delete: '删除',
    persistent: '持久化',
    nonPersistent: '非持久化',
    partition: '分区',
    partitions: '分区',
    partitionNumber: '分区数',
    topicDomain: '域',
    addRole: '增加角色',
    producer: {
      label: '生产者',
      name: '生产者名称',
      producers: '生产者',
      producerId: '生产者编号',
      producerName: '生产者名称',
      producerNumber: '生产者数量',
      avgMsgSize: '平均消息大小',
      address: '地址',
      since: '源'
    },
    subscription: {
      label: '订阅',
      name: '订阅名称',
      subscriptions: '订阅',
      type: '类型',
      subscriptionNumber: '订阅数',
      msgExpired: '消息已过期',
      backlog: '积压消息',
      skip: '跳过',
      skipMessage: '信息',
      expire: '到期',
      expireMessage: '早于时间戳的消息（秒）',
      expireTimePlaceholder: '消息过期时间',
      expireTimeRequired: '需要过期时间',
      clear: '清除',
      clearMessage: '清除消息',
      clearMessageConfirm: '你确认没有积压吗?',
      reset: '重置',
      resetByTime: '按时间重置',
      resetByTimeMessage: '按早于时间戳的时间重置（以分钟为单位）',
      resetByTimeRequired: '需要重置时间',
      resetById: '按消息Id重置',
      messageId: '消息ID',
      mins: 'Mins',
      storage: '存储',
      storageSize: '存储大小',
      entries: '条目',
      segments: '分段',
      peek: '查看',
      peekMessages: '信息',
      entryId: '条目Id',
      message: '信息',
      messageGreaterThanZero: '消息应大于0',
      peekMessageError: '查看消息错误，请检查',
      messageSkipSuccess: '消息跳过成功',
      expireMessageSuccess: '消息已成功过期',
      clearMessageSuccess: '成功清除消息',
      minutesNotLessThanZero: '分钟数不能小于0',
      resetCursorSuccess: '成功重置游标',
      messageIdNotLessThanZero: '消息Id不能小于0',
      newSub: '新订阅',
      sub: '订阅',
      unsub: '退订',
      subNotification: '请输入正确的子名称',
      createSubSuccess: '成功创建订阅',
      deleteSubSuccess: '成功删除订阅',
      deleteSubConfirm: '是否要删除此订阅?'
    },
    segment: {
      label: '分段',
      name: '分段名称',
      ledgerId: '分类Id',
      entries: '条目',
      size: '大小',
      status: '状态',
      offload: '卸载'
    },
    cursor: {
      label: '游标',
      name: '游标名称',
      cursors: '游标',
      markDeletePosition: '标记删除位置',
      readPosition: '读取位置',
      waitingReadOp: '等待读取操作',
      pendingReadOp: '挂起读取操作',
      numberOfEntriesSinceFirstNotAckedMessage: '自第一次未确认消息后的条目'
    },
    policy: {
      label: '策略',
      name: '策略名称',
      policies: '策略',
      authentication: '授权',
      authorizationContent: '授予和撤消对主题的客户端角色的权限.'
    },
    consumer: {
      label: '消费者',
      name: '消费者名称',
      consumers: '消费者',
      avgMsgSize: '平均消息大小',
      address: '地址',
      since: '源'
    },
    notification: {
      createTopicSuccess: '成功创建主题!',
      deleteTopicSuccess: '成功删除主题!',
      deletePartitionedTopicSuccess: '已成功删除分区主题!',
      unloadTopicSuccess: '成功卸载主题!',
      terminateTopicSuccess: '成功终止主题!',
      startCompactionSuccess: '已成功开始压缩主题!',
      startOffloadSuccess: '已成功开始卸载主题!',
      expireMessageSuccess: '已成功使主题的邮件过期!'
    },
    info: '信息',
    column: '列',
    data: '数据',
    terminate: '终止',
    compactionName: '压缩',
    compaction: '压缩',
    offloadName: '卸载',
    offload: '卸载',
    status: '状态',
    unload: '卸载',
    deleteTopicMessage: '确实要删除此主题吗?',
    partitionedTopicName: '分区主题名称',
    selectRoleMessage: '请选择角色',
    backlogOpeartion: '积压消息操作'
  },
  cluster: {
    label: '节点',
    name: '节点名称',
    addCluster: '增加节点',
    updateCluster: '更新节点',
    deleteCluster: '删除节点',
    searchClusters: '查找节点',
    selectCluster: '请选择节点',
    serviceUrl: '服务地址',
    selectClusterMessage: '请选择节点',
    webServiceUrlPrefix: 'Http服务Url',
    webServiceUrlTlsPrefix: 'Https服务Url',
    brokerServiceUrlPrefix: 'Broker服务Url',
    brokerServiceUrlTlsPrefix: 'Broker服务Url (TLS)',
    deleteClusterMessage: '确实要删除此节点吗?',
    replicatedCluster: '复制的节点',
    addClusterSuccessNotification: '成功添加节点',
    deleteClusterSuccessNotification: '成功删除节点',
    clusterNameIsRequired: '节点名称是必需的',
    serviceUrlIsRequired: '服务URL是必需的',
    deleteClusterDialogCaption: '删除节点',
    updateClusterSuccessNotification: '已成功更新节点'
  },
  broker: {
    label: 'Broker',
    name: 'Broker',
    brokerNumber: 'Brokers',
    ownedNamespaceNumber: '拥有的命名空间',
    throughput: '吞吐量（字节/秒）',
    msgRate: '消息速率（消息数/秒）',
    placeholderSelectBroker: '请选择brokers',
    brokerContent: '属于此失败域的Broker列表.'
  },
  bookie: {
    label: 'Bookie',
    name: '名称',
    state: '状态',
    storage: '存储'
  },
  // failure domain
  fd: {
    label: '故障域',
    failureDomainNumber: '故障域',
    createFdTitle: '创建一个新的故障域',
    name: '域名称',
    brokerList: 'Broker清单',
    selectBrokers: '请选择brokers',
    searchFds: '查找故障域',
    newFd: '新建故障域',
    updateFd: '更新故障域',
    deleteFd: '删除故障域',
    deleteFdMessage: '确实要删除此失败域吗?',
    domainNameIsRequired: '域名是必需的',
    deleteDomainDialogCaption: '删除失败域',
    createFdSuccessNotification: '成功创建失败域',
    deleteFdSuccessNotification: '成功删除失败域',
    updateFdSuccessNotification: '成功更新失败域'
  },
  // isolation policies
  ip: {
    label: '策略',
    heading: '命名空间隔离策略',
    name: '策略名称',
    searchIps: '查找隔离策略',
    selectIp: '选择隔离策略',
    newIp: '新建隔离策略',
    nameLabel: '隔离策略',
    numPBLabel: '主Brokers',
    numSBLabel: '备Brokers',
    newIpName: '请输入策略名称',
    selectNsLabel: '选择名称空间',
    selectPbLabel: '选择Brokers',
    selectSbLabel: '选择Brokers',
    selectAfpPh: '请选择自动故障转移策略',
    pbHeading: '主Brokers',
    sbHeading: '备Brokers',
    afpHeading: '自动故障转移策略',
    ptHeading: '策略类型',
    brokerUsageThresholdLabel: 'Broker使用阈值',
    brokerUsageThresholdPh: '请输入broker使用阈值',
    minimalAvailableBrokerLabel: '最小可用Brokers',
    minimalAvailableBrokerPh: '请输入最小可用Broker',
    deletePolicyMessage: '确实要删除此策略吗?',
    deletePolicyDialogCaption: '删除隔离策略',
    deletePolicySuccessNotification: '成功删除隔离策略',
    policyNameCannotBeEmpty: '策略名称不能为空',
    regexCannotBeEmpty: '命名空间正则表达式不能为空',
    nsRegexAlreadyExists: '命名空间正则表达式已存在',
    primaryBrokerRegexCannotBeEmpty: '主Broker正则表达式不能为空',
    primaryBrokerRegexAlreadyExists: '主Broker正则表达式已存在',
    secondaryBrokerRegexCannotBeEmpty: '辅助Broker正则表达式不能为空',
    secondaryBrokerRegexAlreadyExists: '辅助Broker正则表达式已存在',
    numLimitShouldGreaterThan0: '最小可用Broker应大于0',
    usageThresholdShouldGreaterThan0: 'Broker使用阈值应大于0',
    updatePolicySuccessNotification: '成功更新丢失策略',
    namespaceDesc: '要应用此隔离策略的命名空间的正则表达式.',
    primaryBrokerDesc: '此隔离策略的主Broker的正则表达式.',
    secondaryBrokerDesc: '此隔离策略的次Broker的正则表达式.',
    policyTypeDesc: '在主Broker和辅助Broker之间自动故障切换已配置名称空间的策略.',
    brokerUsageThresholdDesc: 'Broker被标记为不可用于自动故障转移策略的使用率阈值.',
    minimalAvailableBrokerDesc: '触发自动故障转移的可用Broker的最小数目.'
  },
  // environment
  env: {
    buttonNewEnv: '新环境',
    colHeadingEnv: '环境名称',
    colHeadingServiceUrl: '服务URL',
    newEnvDialogCaption: '新环境',
    newEnvNamePlaceHolder: '请输入环境名称',
    newEnvNameLabel: '环境名称',
    newEnvServiceUrlPlaceHolder: '请输入环境服务url',
    newEnvServiceUrlLabel: '服务URL',
    updateEnvDialogCaption: '更新环境',
    updateEnvNameLabel: '环境名称',
    updateEnvServiceUrlPlaceHolder: '请输入环境服务url',
    updateEnvServiceUrlLabel: '服务URL',
    deleteEnvDialogCaption: '删除环境',
    deleteEnvDialogText: '确实要删除此环境吗?',
    envNameIsRequired: '环境名称是必需的',
    serviceUrlIsRequired: '服务URL是必需的',
    addEnvSuccessNotification: '成功添加环境',
    deleteEnvSuccessNotification: '成功删除环境',
    updateEnvSuccessNotification: '成功更新环境',
    manageEnvs: '管理环境'
  },
  token: {
    buttonNewToken: '创建Token',
    colHeadingRole: '角色',
    colHeadingToken: 'Token',
    colHeadingDesc: '描述',
    newTokenRolePlaceholder: '请输入角色名称',
    newTokenDialogCaption: '创建Token',
    newTokenDescPlaceholder: '请输入角色描述',
    newTokenRequiredMessage: '角色是必需的',
    addTokenSuccessNotification: '已成功为角色添加令牌',
    deleteTokenSuccessNotification: '成功删除角色的令牌',
    updateTokenSucccessNotification: '已成功更新角色的令牌'
  },
  user: {
    buttonNewUser: '新建用户',
    colUserName: '用户名',
    colUserDesc: '用户描述',
    colUserEmail: '用户邮箱',
    colUserPhone: '用户电话号码',
    colUserLocation: '用户位置',
    colUserCompany: '用户单位',
    colUserPassword: '用户密码',
    colUserPasswordRepeat: '重复用户密码',
    userNamePlaceHolder: '请输入用户名',
    userDescPlaceHolder: '请输入用户描述',
    userEmailPlaceHolder: '请输入用户邮箱',
    userPhonePlaceHolder: '请输入用户电话号码',
    userLocationPlaceHolder: '请输入用户位置',
    userCompanyPlaceHolder: '请输入用户单位',
    userPasswordPlaceHolder: '请输入用户密码',
    newUser: '新建用户',
    deleteUser: '删除用户',
    updateUser: '更新用户',
    userNameIsRequired: '名称不能为空',
    userEmailIsRequired: '电子邮件不能为空',
    userPasswordIsRequired: '密码不能为空',
    passwordNotification: '密码不匹配',
    creatUserNotification: '创建用户成功',
    deleteUserNotification: '删除用户成功',
    updateUserNotification: '更新用户成功'
  },
  role: {
    roleAlreadyExists: '角色已存在',
    buttonNewRole: '新建角色',
    colRoleName: '角色名称',
    colRoleDesc: '角色描述',
    colResourceType: '资源类型',
    colResourceName: '资源名称',
    colResourceVerbs: '资源动词',
    colRoleSource: '角色来源',
    colResource: '资源',
    roleNamePlaceHolder: '请输入角色名称',
    roleDescPlaceHolder: '请输入角色描述',
    resourceTypePlaceHolder: '请选择资源类型',
    resourcePlaceHolder: '请选择资源',
    resourceVerbsPlaceHolder: '请选择角色动词',
    resourceDescPlaceHolder: '请输入角色描述',
    newRole: '新角色',
    deleteRole: '删除角色',
    updateRole: '更新角色',
    roleNameIsRequired: '名称不能为空',
    creatRoleNotification: '创造一个成功的角色',
    deleteRoleNotification: '删除角色成功',
    updateRoleNotification: '更新角色成功'
  }
}
